networks:
  microservices:
    external: true


volumes:
  secret_volume:
  user:
  frontend:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './services/nginx/frontend/'
  pongapp:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './services/backend/game3d/tools/game3d/'
  chat:
  game3d:
  pokemap:
  prom_data:
  graf_data:


services:
  nginx:
    container_name: nginx
    networks:
    - microservices
    build: services/nginx
    image: nginx
    ports:
      - "4430:4430"
    restart: on-failure

  user:
    container_name: user
    user: root
    volumes:
      - user:/var/lib/postgresql/
    networks:
    - microservices
    build: services/backend/user
    image: user
    expose :
    - "4430"
    restart: on-failure

  token:
    container_name: jwtoken
    networks:
      - microservices
    build: services/backend/JWToken
    image: jwtoken
    expose :
      - "4430"
    restart: on-failure

  game3d:
    container_name: game3d
    user: root
    volumes:
    - game3d:/var/lib/postgresql
    networks:
      - microservices
    build: services/backend/game3d
    image: game3d
    expose :
      - "4430"
    restart: on-failure

  pokemap:
    container_name: pokemap
    networks:
      - microservices
    build: services/backend/pokemap
    image: pokemap
    expose :
      - "4430"
    restart: on-failure

  chat:
    container_name: chat
    user: root
    volumes:
      - chat:/var/lib/postgresql/
    networks:
    - microservices
    build: services/backend/chat
    image: chat
    expose :
    - "4430"
    restart: on-failure

  prometheus:
    image: prom/prometheus
    user: root
    container_name: prometheus
    command:
      - '--config.file=/tmp/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/tmp/prometheus
      - prom_data:/prometheus

  grafana:
    user: root
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./grafana/dashboard.json:/etc/grafana/provisioning/dashboards/dashboard.json
      - graf_data:/grafana